# Generated by Django 4.0.2 on 2022-02-16 01:27

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BestResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('br_player', models.PositiveIntegerField()),
                ('walltime', models.FloatField()),
                ('model', models.BinaryField()),
                ('config', models.JSONField()),
                ('name', models.TextField()),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EquilibriumSolverRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.TextField()),
                ('config', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='EquilibriumSolverRunCheckpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('t', models.PositiveIntegerField()),
                ('walltime', models.FloatField()),
                ('nash_conv', models.FloatField(null=True)),
                ('approx_nash_conv', models.FloatField(null=True)),
                ('policy', models.BinaryField()),
                ('equilibrium_solver_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auctions.equilibriumsolverrun')),
            ],
            options={
                'unique_together': {('equilibrium_solver_run', 't')},
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.TextField(unique=True)),
                ('config', models.JSONField(null=True)),
                ('num_players', models.PositiveIntegerField()),
                ('num_actions', models.PositiveIntegerField()),
                ('num_products', models.PositiveIntegerField()),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.TextField(unique=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auctions.game')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('walltime', models.FloatField()),
                ('samples', models.JSONField()),
                ('checkpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auctions.equilibriumsolverruncheckpoint')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='equilibriumsolverrun',
            name='experiment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auctions.experiment'),
        ),
        migrations.AddField(
            model_name='equilibriumsolverrun',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auctions.game'),
        ),
        migrations.CreateModel(
            name='BREvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('walltime', models.FloatField()),
                ('expected_value_cdf', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=101)),
                ('expected_value_stats', models.JSONField()),
                ('best_response', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='auctions.bestresponse')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='bestresponse',
            name='checkpoint',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auctions.equilibriumsolverruncheckpoint'),
        ),
        migrations.AlterUniqueTogether(
            name='equilibriumsolverrun',
            unique_together={('experiment', 'name')},
        ),
    ]
